name: Feature Branch Workflow

on:
  push:
    branches:
      - 'feat/*'

jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install dependencies
        run: mvn install -DskipTests
      
      - name: Show env variables
        run: |
          echo "MONGO_USERNAME: ${{ secrets.MONGO_USERNAME }}"
          echo "MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}"
          echo "MONGO_HOST: ${{ secrets.MONGO_HOST }}"
          echo "MONGO_DATABASE: ${{ secrets.MONGO_DATABASE }}"

      - name: Run tests
        run: mvn test
        env:
          MONGO_USERNAME: ${{ secrets.MONGO_USERNAME }}
          MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
          MONGO_HOST: ${{ secrets.MONGO_HOST }}
          MONGO_DATABASE: ${{ secrets.MONGO_DATABASE }}

      - name: Install xmllint
        run: sudo apt-get update && sudo apt-get install -y libxml2-utils
      
      - name: Get version from pom.xml
        id: get_version
        run: echo "VERSION=$(xmllint --xpath '/*[local-name()="project"]/*[local-name()="version"]/text()' pom.xml)" >> $GITHUB_ENV

      - name: Create Pull Request
        if: success()
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'Automated PR: Merging feature branch into master'
          branch: master
          title: 'Automated PR: Merging feature branch into master'
          body: 'This PR is automatically created by GitHub Actions to merge changes from the feature branch into master.'
          labels: 'automated-pr'
      
      - name: Create Release
        if: success()
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          body: |
            This is an automated release.
          draft: false
          prerelease: false